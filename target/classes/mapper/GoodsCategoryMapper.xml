<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ltd.newbee.mall.dao.GoodsCategoryMapper">
    <resultMap id="BaseResultMap" type="ltd.newbee.mall.entity.GoodsCategory">
        <id column="category_id" jdbcType="BIGINT" property="categoryId"/>
        <result column="category_level" jdbcType="TINYINT" property="categoryLevel"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="category_name" jdbcType="VARCHAR" property="categoryName"/>
        <result column="category_rank" jdbcType="INTEGER" property="categoryRank"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user" jdbcType="INTEGER" property="createUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_user" jdbcType="INTEGER" property="updateUser"/>
    </resultMap>
    <sql id="Base_Column_List">
    category_id, category_level, parent_id, category_name, category_rank, is_deleted, 
    create_time, create_user, update_time, update_user
  </sql>
    <select id="findGoodsCategoryList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_newbee_mall_goods_category
        <where>
            <if test="categoryLevel!=null and categoryLevel!=''">
                and category_level = #{categoryLevel}
            </if>
            <if test="parentId!=null and parentId!=''">
                and parent_id = #{parentId}
            </if>
            and is_deleted = 0
        </where>
        order by category_rank desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>
    <select id="getTotalGoodsCategories" parameterType="Map" resultType="int">
        select count(*) from tb_newbee_mall_goods_category
        <where>
            <if test="categoryLevel!=null and categoryLevel!=''">
                and category_level = #{categoryLevel}
            </if>
            <if test="parentId!=null and parentId!=''">
                and parent_id = #{parentId}
            </if>
            and is_deleted = 0
        </where>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_newbee_mall_goods_category
        where category_id = #{categoryId,jdbcType=BIGINT} and is_deleted=0
    </select>
    <select id="selectByLevelAndName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_newbee_mall_goods_category
        where category_name = #{categoryName,jdbcType=VARCHAR} and category_level = #{categoryLevel,jdbcType=TINYINT}
        and is_deleted = 0 limit 1
    </select>
    <select id="selectByLevelAndParentIdsAndNumber" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_newbee_mall_goods_category
        where parent_id in
        <foreach item="parentId" collection="parentIds" open="(" separator="," close=")">
            #{parentId,jdbcType=BIGINT}
        </foreach>
        and category_level = #{categoryLevel,jdbcType=TINYINT}
        and is_deleted = 0
        order by category_rank desc
        <if test="number>0">
            limit #{number}
        </if>
    </select>
    <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
    update tb_newbee_mall_goods_category set is_deleted=1
    where category_id = #{categoryId,jdbcType=BIGINT} and is_deleted=0
  </update>
    <update id="deleteBatch">
        update tb_newbee_mall_goods_category
        set is_deleted=1 where category_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <insert id="insert" parameterType="ltd.newbee.mall.entity.GoodsCategory">
    insert into tb_newbee_mall_goods_category (category_id, category_level, parent_id, 
      category_name, category_rank, is_deleted, 
      create_time, create_user, update_time, 
      update_user)
    values (#{categoryId,jdbcType=BIGINT}, #{categoryLevel,jdbcType=TINYINT}, #{parentId,jdbcType=BIGINT}, 
      #{categoryName,jdbcType=VARCHAR}, #{categoryRank,jdbcType=INTEGER}, #{isDeleted,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="ltd.newbee.mall.entity.GoodsCategory">
        insert into tb_newbee_mall_goods_category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="categoryLevel != null">
                category_level,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="categoryName != null">
                category_name,
            </if>
            <if test="categoryRank != null">
                category_rank,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="categoryId != null">
                #{categoryId,jdbcType=BIGINT},
            </if>
            <if test="categoryLevel != null">
                #{categoryLevel,jdbcType=TINYINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="categoryName != null">
                #{categoryName,jdbcType=VARCHAR},
            </if>
            <if test="categoryRank != null">
                #{categoryRank,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="ltd.newbee.mall.entity.GoodsCategory">
        update tb_newbee_mall_goods_category
        <set>
            <if test="categoryLevel != null">
                category_level = #{categoryLevel,jdbcType=TINYINT},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="categoryName != null">
                category_name = #{categoryName,jdbcType=VARCHAR},
            </if>
            <if test="categoryRank != null">
                category_rank = #{categoryRank,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=INTEGER},
            </if>
        </set>
        where category_id = #{categoryId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="ltd.newbee.mall.entity.GoodsCategory">
    update tb_newbee_mall_goods_category
    set category_level = #{categoryLevel,jdbcType=TINYINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      category_name = #{categoryName,jdbcType=VARCHAR},
      category_rank = #{categoryRank,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where category_id = #{categoryId,jdbcType=BIGINT}
  </update>
  
  <resultMap id="CampaignResultMap" type="ltd.newbee.mall.entity.Campaign">
        <result column="cam_id" jdbcType="BIGINT" property="camId"/>
        <result column="cam_kind" jdbcType="VARCHAR" property="camKind"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="time_stamp" jdbcType="TIMESTAMP" property="timeStamp"/>
        <result column="priority" jdbcType="INTEGER" property="priority"/>
        <result column="cam_name" jdbcType="VARCHAR" property="camName"/>
        <result column="cal1" jdbcType="VARCHAR" property="cal1"/>
        <result column="cal2" jdbcType="VARCHAR" property="cal2"/>
        <result column="cal3" jdbcType="VARCHAR" property="cal3"/>
        <result column="is_deleted" jdbcType="INTEGER" property="isDeleted"/>
    </resultMap>
    <sql id="Campaign_Column_List">
    cam_id,cam_kind,create_user,time_stamp,priority,cam_name,cal1,cal2,cal3,is_deleted
    </sql>
    <select id="findGoodsCampaignList" parameterType="Map" resultMap="CampaignResultMap">
    	select
    <include refid="Campaign_Column_List"/>
    	from newbee_mall_db.cam_table
    <where>
    	is_deleted = 0
    </where>
    <if test="start!=null and limit!=null">
        limit #{start},#{limit}
    </if>
    	
    </select>
    
    <select id="getTotalCampaign" parameterType="Map" resultType="int">
        select count(*) from newbee_mall_db.cam_table
    </select>
    
    <insert id="insertNewCampaign" parameterType="ltd.newbee.mall.entity.Campaign">
    insert into newbee_mall_db.cam_table (cam_id,cam_kind,create_user,time_stamp,priority,
    	cam_name,cal1,cal2,cal3)
    values (#{camId,jdbcType=BIGINT}, #{camKind,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{timeStamp,jdbcType=TIMESTAMP}, #{priority,jdbcType=INTEGER}, #{camName,jdbcType=VARCHAR}, 
      #{cal1,jdbcType=VARCHAR}, #{cal2,jdbcType=VARCHAR}, #{cal3,jdbcType=VARCHAR})
   </insert>
  
    <select id="getMaxCampaignId" resultType="Long">
        select max(cam_id) from newbee_mall_db.cam_table
    </select>
   <select id="getCampaignInfo" parameterType="String" resultType="ltd.newbee.mall.entity.Campaign">
        select cam_kind,priority from cam_table 
        <where>
        cam_name = #{camName,jdbcType=VARCHAR}
        </where>
        
        group by cam_name
        
   </select> 
   <select id="getCampaignById" parameterType="Long" resultType="ltd.newbee.mall.entity.Campaign">
   		select cam_kind,create_user,time_stamp/priority,cam_name,cal1,cal2,cal3 from newbee_mall_db.cam_table
 		<where>cam_id = #{camId,jdbcType=BIGINT}
 		</where>
   </select>
   
   <select id="getCampaignId" resultType="Long">
        select cam_id from newbee_mall_db.cam_table
   </select>
   
   <update id="updateByCamId" parameterType="ltd.newbee.mall.entity.Campaign">
    update newbee_mall_db.cam_table
    set cam_kind = #{camKind,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      time_stamp = #{timeStamp,jdbcType=TIMESTAMP},
      priority = #{priority,jdbcType=INTEGER},
      cam_name = #{camName,jdbcType=VARCHAR},
      cal1 = #{cal1,jdbcType=VARCHAR},
      cal2 = #{cal2,jdbcType=VARCHAR},
      cal3 = #{cal3,jdbcType=VARCHAR}
    <where>
      cam_id = #{camId,jdbcType=BIGINT}
    </where>
  </update>
  
  <update id="deleteCampaign">
        update newbee_mall_db.cam_table
        set is_deleted=1 where cam_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    
    
      <resultMap id="GoodsCampaignResultMap" type="ltd.newbee.mall.entity.GoodsCampaign">
        <result column="goods_id" jdbcType="BIGINT" property="goodsId"/>
        <result column="cam_id" jdbcType="BIGINT" property="camId"/>
        <result column="start_date" jdbcType="TIMESTAMP" property="startDate"/>
        <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="priority" jdbcType="INTEGER" property="priority"/>
        <result column="cam_kind" jdbcType="VARCHAR" property="camKind"/>
        <result column="cal1" jdbcType="VARCHAR" property="cal1"/>
        <result column="cam_name" jdbcType="VARCHAR" property="camName"/>
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
        <result column="is_deleted" jdbcType="INTEGER" property="isDeleted"/>
    </resultMap>
    
    <select id="findCampaignList" parameterType="Map" resultMap="GoodsCampaignResultMap">
    select c.goods_id,a.cam_id,a.start_date,a.end_date,b.cam_kind,b.priority,b.cam_name,b.cal1,a.is_deleted 
			,c.goods_name from goods_cam a join cam_table b on a.cam_id = b.cam_id right join tb_newbee_mall_goods_info c
			on a.goods_id = c.goods_id
    <where>
    	<!-- a.is_deleted = 0 -->
    <if test="keyword!=null and keyword!=''">
		and c.goods_name like CONCAT('%',#{keyword},'%')
	</if>
    <if test="start!=null and limit!=null">
        limit #{start},#{limit}
    </if>
    </where>
    </select>
    
    <select id="getTotalGoodsCampaign" parameterType="Map" resultType="int">
        select count(*) from goods_cam a join cam_table b on a.cam_id = b.cam_id right join tb_newbee_mall_goods_info c
			on a.goods_id = c.goods_id
    </select>
    
    <select id="getGoodsCampaignContent" resultType="ltd.newbee.mall.entity.GoodsCampaign">
         select * from cam_table order by priority
    </select>
    
    <update id="setNewGoodsCam" parameterType="ltd.newbee.mall.entity.GoodsCampaign">
    update goods_cam 
    set cam_id = #{camId,jdbcType=BIGINT},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP}
    <where>
      goods_id = #{goodsId,jdbcType=BIGINT}
    </where>
    </update>
  
    <select id="getGoodsCampaignByGoodsId" parameterType="Long" resultType="ltd.newbee.mall.entity.GoodsCampaign">
        select c.goods_id,a.cam_id,a.start_date,a.end_date,b.cam_kind,b.priority,b.cam_name,b.cal1,a.is_deleted 
			,c.goods_name from goods_cam a join cam_table b on a.cam_id = b.cam_id right join tb_newbee_mall_goods_info c
			on a.goods_id = c.goods_id
	  <where>
      a.goods_id = #{goodsId,jdbcType=BIGINT}
      </where>
    </select>
    
    <insert id="insertNewGoodsCampaign" parameterType="ltd.newbee.mall.entity.GoodsCampaign">
    insert into newbee_mall_db.goods_cam (goods_id,cam_id,start_date,end_date)
    values (#{goodsId,jdbcType=BIGINT}, #{camId,jdbcType=BIGINT}, #{startDate,jdbcType=TIMESTAMP}, 
      #{endDate,jdbcType=TIMESTAMP})
   </insert>
   
    <delete id="deleteGoodsCam" parameterType="ltd.newbee.mall.entity.GoodsCampaign">
    delete from goods_cam
    <where>
      goods_id = #{goodsId,jdbcType=BIGINT}
      and cam_id = #{camId,jdbcType=BIGINT}
    </where>
    </delete>
    
</mapper>
